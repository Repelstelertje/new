---
import { PROVINCES, provinceToSlug } from "../lib/provinces";

const datingTips = [
  { href: "/datingtips/veilig-daten/", label: "Veilig daten (18+)" },
  { href: "/datingtips/eerste-bericht/", label: "Het eerste bericht" },
  { href: "/datingtips/afspreken/", label: "Afspreken: do’s & don’ts" },
];

const socials = [
  { href: "https://facebook.com/contactoproepjes", label: "Facebook", icon: "/img/fb.png" },
  { href: "https://www.instagram.com/oproepjes_nederland", label: "Instagram", icon: "/img/ig.png" },
];
---

<header class="sticky top-0 z-40 border-b border-neutral-200 bg-white/80 backdrop-blur">
  <div class="mx-auto flex max-w-6xl items-center justify-between px-4 py-3">
    <!-- Brand -->
    <a href="/" aria-label="Ga naar home" class="flex items-center gap-2">
      <span class="inline-flex h-9 w-9 items-center justify-center rounded-xl bg-sky-600 text-white">18+</span>
      <span class="text-lg font-semibold tracking-tight text-neutral-900">OproepjesNederland</span>
    </a>

    <!-- Nav -->
    <nav class="relative">
      <ul class="flex items-center gap-2">
        <!-- Provinces -->
        <li class="relative">
          <button
            class="dropdown-trigger rounded-full px-4 py-2 text-sm font-semibold text-neutral-900 hover:bg-neutral-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500"
            data-dropdown="provinces"
            aria-haspopup="true"
            aria-expanded="false"
          >
            Provinces ▾
          </button>
          <div
            class="dropdown-panel invisible absolute left-0 mt-2 min-w-56 translate-y-1 rounded-2xl border border-neutral-200 bg-white p-2 opacity-0 shadow-xl transition
                   data-[open=true]:visible data-[open=true]:translate-y-0 data-[open=true]:opacity-100"
            id="dropdown-provinces"
            role="menu"
            aria-label="Provincies"
          >
            <ul class="grid grid-cols-1 gap-1">
              {PROVINCES.map((p) => (
                <li>
                  <a
                    href={`/dating-${provinceToSlug(p)}/`}
                    class="block rounded-xl px-3 py-2 text-sm font-medium text-neutral-900 hover:bg-neutral-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500"
                    role="menuitem"
                  >
                    {p}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </li>

        <!-- Datingtips -->
        <li class="relative">
          <button
            class="dropdown-trigger rounded-full px-4 py-2 text-sm font-semibold text-neutral-900 hover:bg-neutral-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500"
            data-dropdown="tips"
            aria-haspopup="true"
            aria-expanded="false"
          >
            Datingtips ▾
          </button>
          <div
            class="dropdown-panel invisible absolute left-0 mt-2 min-w-56 translate-y-1 rounded-2xl border border-neutral-200 bg-white p-2 opacity-0 shadow-xl transition
                   data-[open=true]:visible data-[open=true]:translate-y-0 data-[open=true]:opacity-100"
            id="dropdown-tips"
            role="menu"
            aria-label="Datingtips"
          >
            <ul class="grid grid-cols-1 gap-1">
              {datingTips.map((t) => (
                <li>
                  <a
                    href={t.href}
                    class="block rounded-xl px-3 py-2 text-sm font-medium text-neutral-900 hover:bg-neutral-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500"
                    role="menuitem"
                  >
                    {t.label}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </li>

        <!-- Socials -->
        <li class="relative">
          <button
            class="dropdown-trigger rounded-full px-4 py-2 text-sm font-semibold text-neutral-900 hover:bg-neutral-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500"
            data-dropdown="socials"
            aria-haspopup="true"
            aria-expanded="false"
          >
            Socials ▾
          </button>
          <div
            class="dropdown-panel invisible absolute left-0 mt-2 min-w-56 translate-y-1 rounded-2xl border border-neutral-200 bg-white p-2 opacity-0 shadow-xl transition
                   data-[open=true]:visible data-[open=true]:translate-y-0 data-[open=true]:opacity-100"
            id="dropdown-socials"
            role="menu"
            aria-label="Social media"
          >
            <ul class="grid grid-cols-1 gap-1">
              {socials.map((s) => (
                <li>
                  <a
                    href={s.href}
                    target="_blank"
                    rel="noopener nofollow"
                    class="flex items-center gap-3 rounded-xl px-3 py-2 text-sm font-medium text-neutral-900 hover:bg-neutral-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-sky-500"
                    role="menuitem"
                    aria-label={s.label}
                  >
                    <img src={s.icon} alt="" width="20" height="20" class="h-5 w-5" />
                    <span>{s.label}</span>
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </li>
      </ul>
    </nav>
  </div>
</header>

<script is:raw>
  (function () {
    const triggers = Array.from(document.querySelectorAll(".dropdown-trigger"));
    const panelsByKey = {
      provinces: document.getElementById("dropdown-provinces"),
      tips: document.getElementById("dropdown-tips"),
      socials: document.getElementById("dropdown-socials"),
    };

    function closeAll() {
      triggers.forEach((b) => b.setAttribute("aria-expanded", "false"));
      Object.values(panelsByKey).forEach((p) => p && p.setAttribute("data-open", "false"));
    }

    function toggle(key, btn) {
      const panel = panelsByKey[key];
      if (!panel) return;
      const willOpen = panel.getAttribute("data-open") !== "true";
      closeAll();
      if (willOpen) {
        btn.setAttribute("aria-expanded", "true");
        panel.setAttribute("data-open", "true");
      }
    }

    // Click handlers
    triggers.forEach((btn) => {
      btn.addEventListener("click", (e) => {
        const key = btn.getAttribute("data-dropdown");
        if (!key) return;
        e.stopPropagation();
        toggle(key, btn);
      });
    });

    // Close on outside click or Esc
    document.addEventListener("click", (e) => {
      if (!(e.target.closest && e.target.closest(".dropdown-panel")) &&
          !(e.target.closest && e.target.closest(".dropdown-trigger"))) {
        closeAll();
      }
    });
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") closeAll();
    });
  })();
</script>
