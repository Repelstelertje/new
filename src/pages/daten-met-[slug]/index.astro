---
import Base from "../../layouts/Base.astro";
import { config } from "../../lib/config";
import { getProvince } from "../../lib/api";
import { PROVINCES } from "../../lib/provinces";
import { slugifyName } from "../../lib/slug";

type CardProfile = Awaited<ReturnType<typeof getProvince>>["profiles"][number];

export async function getStaticPaths() {
  const pageSize = config.api.limits?.pageSize ?? 60;

  // Gebruik bracket-arraytype ipv Array<...> om parser-issues te voorkomen
  const paths: { params: { slug: string }; props: { profile: CardProfile } }[] = [];

  // Verzamel ALLE profielen die we tijdens build kunnen ophalen
  for (const provinceName of PROVINCES) {
    const first = await getProvince(provinceName, pageSize, 1);
    const totalPages = first.totalPages ?? 1;

    const collect = async (page: number) => {
      const data = page === 1 ? first : await getProvince(provinceName, pageSize, page);
      for (const p of data.profiles) {
        const slug = slugifyName(p.name);
        paths.push({ params: { slug }, props: { profile: p } });
      }
    };

    for (let page = 1; page <= totalPages; page++) {
      await collect(page);
    }
  }

  return paths;
}

const { profile } = Astro.props as { profile: CardProfile };

// Geen harde redirect meer bij query-id mismatch; render altijd.
// We nemen id uit query op in canonical voor stabiliteit.
const q = new URL(Astro.url).searchParams;
const idParam = q.get("id") ?? String(profile.id);

// SEO & canonical
const title = `Date met ${profile.name} in ${profile.province}`;
const description = profile.description ?? `Leer ${profile.name} kennen en stuur gratis een bericht.`;
const canonicalPath = `${Astro.url.pathname}?id=${encodeURIComponent(String(idParam))}`;

// Afbeelding + fallback
const imgSrc = profile.img?.src ?? "/img/fallback.svg";
const imgAlt = profile.img?.alt ?? profile.name;

// JSON-LD minimaal
const personLd = { "@type": "Person", name: profile.name, description: profile.description ?? undefined };
---
<Base title={title} description={description} path={canonicalPath} staging={import.meta.env.STAGING} jsonLd={[personLd]}>
  <article class="mx-auto grid max-w-5xl grid-cols-1 gap-8 md:grid-cols-[320px,1fr]">
    <div class="overflow-hidden rounded-2xl border border-neutral-200 bg-white">
      <img
        src={imgSrc}
        alt={imgAlt}
        loading="eager"
        decoding="async"
        onerror="this.src='/img/fallback.svg'"
        class="block h-auto w-full object-cover"
      />
    </div>

    <div class="space-y-4">
      <header>
        <h1 class="text-3xl font-bold text-neutral-900">{profile.name}</h1>
        <p class="text-neutral-700">{profile.age} jaar Â· {profile.province}</p>
      </header>

      {profile.description && (
        <p class="text-neutral-800 leading-relaxed">{profile.description}</p>
      )}

      <div class="pt-2">
        <a
          href={profile.deeplink}
          rel="nofollow sponsored noopener"
          target="_blank"
          class="inline-flex items-center justify-center rounded-full bg-sky-600 px-6 py-3 text-base font-semibold text-white transition hover:bg-sky-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-400"
          aria-label="Stuur gratis bericht"
          data-analytics="outbound_click"
        >
          Stuur gratis bericht
        </a>
      </div>
    </div>
  </article>
</Base>
